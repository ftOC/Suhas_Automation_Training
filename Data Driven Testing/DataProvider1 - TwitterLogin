package DDT;
import java.util.*;
import java.io.IOException;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class DataProvider1 {
	static XSSFWorkbook workbook; //declaring at class level so that they can be used by all methods
	static XSSFSheet sheet;
	
	//Constructor used to define excelPath and SheetName
	
	public DataProvider1(String excelPath, String sheetName) {
		try {
			workbook = new XSSFWorkbook(excelPath);
			/*Absolute path of the excel sheet can also be provided directly instead of using projectPath
			i.e workbook = new XSSFWorkbook("D:\\Programming\\JAVA\\Demo_webdriver\\excel\\excel1.xlsx");
			can also be used in place of above statement, but it isn't a healthy practice */
			sheet = workbook.getSheet(sheetName);	
		}
		catch (IOException e) 
		{
			e.printStackTrace();
		}
	}
	
	public static int getRowCount() {
		
		int rowCount = sheet.getPhysicalNumberOfRows();
		System.out.println("Number of rows: "+rowCount);
		return rowCount;
	}
	
	public static int getColumnCount() {
		
		int colCount = sheet.getRow(0).getPhysicalNumberOfCells();
		System.out.println("Number of columns: "+colCount);
		return colCount;
	}
	
	public static String getCellDataString(int rownum, int colnum) {
		String cellData = null;
		try
		{
		cellData = sheet.getRow(rownum).getCell(colnum).getStringCellValue();
		//System.out.println(cellData);
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		return cellData;
	}
	
	public static void getCellDataNumeric(int rowNum, int colNum) {
		
		double cellData = sheet.getRow(rowNum).getCell(colNum).getNumericCellValue();
		System.out.println("Numeric cell data: "+cellData);
	}
}
